{
  "stats": {
    "suites": 38,
    "tests": 156,
    "passes": 147,
    "pending": 1,
    "failures": 6,
    "testsRegistered": 156,
    "passPercent": 94.23076923076923,
    "pendingPercent": 0.6410256410256411,
    "other": 0,
    "hasOther": false,
    "skipped": 2,
    "hasSkipped": true,
    "start": "2023-04-10T09:32:41.479Z",
    "end": "2023-04-10T09:36:38.608Z",
    "duration": 237129
  },
  "results": [
    {
      "uuid": "0e319075-82d0-4ee5-8b51-0341957697b7",
      "title": "",
      "fullFile": "cypress\\e2e\\1-getting-started\\todo.cy.js",
      "file": "cypress\\e2e\\1-getting-started\\todo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ac2de20b-12ea-44ed-ad3a-70b0110bf412",
          "title": "example to-do app",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays two todo items by default",
              "fullTitle": "example to-do app displays two todo items by default",
              "timedOut": null,
              "duration": 949,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We use the `cy.get()` command to get all elements that match the selector.\n// Then, we use `should` to assert that there are two matched items,\n// which are the two default items.\ncy.get('.todo-list li').should('have.length', 2);\n// We can go even further and check that the default todos each contain\n// the correct text. We use the `first` and `last` functions\n// to get just the first and last matched elements individually,\n// and then perform an assertion with `should`.\ncy.get('.todo-list li').first().should('have.text', 'Pay electric bill');\ncy.get('.todo-list li').last().should('have.text', 'Walk the dog');",
              "err": {},
              "uuid": "a3465d58-92f4-4c44-9efb-1dbfb059364d",
              "parentUUID": "ac2de20b-12ea-44ed-ad3a-70b0110bf412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can add new todo items",
              "fullTitle": "example to-do app can add new todo items",
              "timedOut": null,
              "duration": 494,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We'll store our item text in a variable so we can reuse it\nconst newItem = 'Feed the cat';\n// Let's get the input element and use the `type` command to\n// input our new list item. After typing the content of our item,\n// we need to type the enter key as well in order to submit the input.\n// This input has a data-test attribute so we'll use that to select the\n// element in accordance with best practices:\n// https://on.cypress.io/selecting-elements\ncy.get('[data-test=new-todo]').type(`${newItem}{enter}`);\n// Now that we've typed our new item, let's check that it actually was added to the list.\n// Since it's the newest item, it should exist as the last element in the list.\n// In addition, with the two default items, we should have a total of 3 elements in the list.\n// Since assertions yield the element that was asserted on,\n// we can chain both of these assertions together into a single statement.\ncy.get('.todo-list li').should('have.length', 3).last().should('have.text', newItem);",
              "err": {},
              "uuid": "81b973c1-738e-45fc-96ef-79345b406422",
              "parentUUID": "ac2de20b-12ea-44ed-ad3a-70b0110bf412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can check off an item as completed",
              "fullTitle": "example to-do app can check off an item as completed",
              "timedOut": null,
              "duration": 277,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// In addition to using the `get` command to get an element by selector,\n// we can also use the `contains` command to get an element by its contents.\n// However, this will yield the <label>, which is lowest-level element that contains the text.\n// In order to check the item, we'll find the <input> element for this <label>\n// by traversing up the dom to the parent element. From there, we can `find`\n// the child checkbox <input> element and use the `check` command to check it.\ncy.contains('Pay electric bill').parent().find('input[type=checkbox]').check();\n// Now that we've checked the button, we can go ahead and make sure\n// that the list element is now marked as completed.\n// Again we'll use `contains` to find the <label> element and then use the `parents` command\n// to traverse multiple levels up the dom until we find the corresponding <li> element.\n// Once we get that element, we can assert that it has the completed class.\ncy.contains('Pay electric bill').parents('li').should('have.class', 'completed');",
              "err": {},
              "uuid": "8f06efd9-5fa6-4b7b-b020-f34eac98b644",
              "parentUUID": "ac2de20b-12ea-44ed-ad3a-70b0110bf412",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "26f192a6-cce0-48a6-848d-3023c2fe4cb6",
              "title": "with a checked task",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can filter for uncompleted tasks",
                  "fullTitle": "example to-do app with a checked task can filter for uncompleted tasks",
                  "timedOut": null,
                  "duration": 438,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We'll click on the \"active\" button in order to\n// display only incomplete items\ncy.contains('Active').click();\n// After filtering, we can assert that there is only the one\n// incomplete item in the list.\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Walk the dog');\n// For good measure, let's also assert that the task we checked off\n// does not exist on the page.\ncy.contains('Pay electric bill').should('not.exist');",
                  "err": {},
                  "uuid": "e28ac2d4-a75d-4621-a439-ef3c61e231cb",
                  "parentUUID": "26f192a6-cce0-48a6-848d-3023c2fe4cb6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can filter for completed tasks",
                  "fullTitle": "example to-do app with a checked task can filter for completed tasks",
                  "timedOut": null,
                  "duration": 396,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can perform similar steps as the test above to ensure\n// that only completed tasks are shown\ncy.contains('Completed').click();\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Pay electric bill');\ncy.contains('Walk the dog').should('not.exist');",
                  "err": {},
                  "uuid": "0a828eff-cc3f-4dea-97ad-61ddc99ed3c1",
                  "parentUUID": "26f192a6-cce0-48a6-848d-3023c2fe4cb6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can delete all completed tasks",
                  "fullTitle": "example to-do app with a checked task can delete all completed tasks",
                  "timedOut": null,
                  "duration": 363,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// First, let's click the \"Clear completed\" button\n// `contains` is actually serving two purposes here.\n// First, it's ensuring that the button exists within the dom.\n// This button only appears when at least one task is checked\n// so this command is implicitly verifying that it does exist.\n// Second, it selects the button so we can click it.\ncy.contains('Clear completed').click();\n// Then we can make sure that there is only one element\n// in the list and our element does not exist\ncy.get('.todo-list li').should('have.length', 1).should('not.have.text', 'Pay electric bill');\n// Finally, make sure that the clear button no longer exists.\ncy.contains('Clear completed').should('not.exist');",
                  "err": {},
                  "uuid": "36c16ef6-51e4-4939-9ecc-3c986d8ec17c",
                  "parentUUID": "26f192a6-cce0-48a6-848d-3023c2fe4cb6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e28ac2d4-a75d-4621-a439-ef3c61e231cb",
                "0a828eff-cc3f-4dea-97ad-61ddc99ed3c1",
                "36c16ef6-51e4-4939-9ecc-3c986d8ec17c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1197,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "a3465d58-92f4-4c44-9efb-1dbfb059364d",
            "81b973c1-738e-45fc-96ef-79345b406422",
            "8f06efd9-5fa6-4b7b-b020-f34eac98b644"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1720,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "98c0ee81-95d9-4623-b2b0-444654e6bd99",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c766c709-4b8f-4ae5-ad8d-648a56ad7423",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4538,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com')\n// .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}')\n// .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}')\n// Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled')\n// Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "6cc2b752-1b62-41c3-b0de-dce9a4084aa1",
              "parentUUID": "c766c709-4b8f-4ae5-ad8d-648a56ad7423",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 252,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "0dc1c2d3-e2e8-4193-892d-0fabcaaa0982",
              "parentUUID": "c766c709-4b8f-4ae5-ad8d-648a56ad7423",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 692,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "a00ef343-72b8-47ef-9bf6-9d2236aded76",
              "parentUUID": "c766c709-4b8f-4ae5-ad8d-648a56ad7423",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 991,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "2a2156ee-4833-4cd6-a937-2036d5c10ce8",
              "parentUUID": "c766c709-4b8f-4ae5-ad8d-648a56ad7423",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 728,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "5414218c-1a40-408d-a027-410ab62dc3b8",
              "parentUUID": "c766c709-4b8f-4ae5-ad8d-648a56ad7423",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 3979,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click();\n// You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight');\n// .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165);\n// click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n});\n// Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "d204dad1-93c0-414d-a679-41aa5fe360f5",
              "parentUUID": "c766c709-4b8f-4ae5-ad8d-648a56ad7423",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 466,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "12acd5be-974a-471e-aa7a-09d5ec6dac14",
              "parentUUID": "c766c709-4b8f-4ae5-ad8d-648a56ad7423",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 273,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "0518ffd2-3e1c-41e8-9203-94a8f15904d1",
              "parentUUID": "c766c709-4b8f-4ae5-ad8d-648a56ad7423",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1154,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked');\n// .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked');\n// .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked');\n// Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "69fdb149-528d-4870-9390-73ace91dfbd6",
              "parentUUID": "c766c709-4b8f-4ae5-ad8d-648a56ad7423",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1125,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked');\n// .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked');\n// .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked');\n// Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "879c2454-3a74-4739-9969-04a33093842f",
              "parentUUID": "c766c709-4b8f-4ae5-ad8d-648a56ad7423",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1136,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--');\n// Select option(s) with matching text content\ncy.get('.action-select').select('apples');\n// confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas'])\n// when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas')\n// can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "6937ddd3-40a1-4e88-a857-b692f72f32de",
              "parentUUID": "c766c709-4b8f-4ae5-ad8d-648a56ad7423",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible');\n// scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible');\n// Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible');\n// Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "c8330296-cffc-4001-b33e-e6396fc3eeb0",
              "parentUUID": "c766c709-4b8f-4ae5-ad8d-648a56ad7423",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "825e46ff-e351-4d39-9c29-154bbd15044e",
              "parentUUID": "c766c709-4b8f-4ae5-ad8d-648a56ad7423",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2182,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right');\n// or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250);\n// or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%');\n// control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n});\n// control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "57c239ac-41f5-480e-a11d-3e25fa7f7940",
              "parentUUID": "c766c709-4b8f-4ae5-ad8d-648a56ad7423",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6cc2b752-1b62-41c3-b0de-dce9a4084aa1",
            "0dc1c2d3-e2e8-4193-892d-0fabcaaa0982",
            "a00ef343-72b8-47ef-9bf6-9d2236aded76",
            "2a2156ee-4833-4cd6-a937-2036d5c10ce8",
            "5414218c-1a40-408d-a027-410ab62dc3b8",
            "d204dad1-93c0-414d-a679-41aa5fe360f5",
            "12acd5be-974a-471e-aa7a-09d5ec6dac14",
            "0518ffd2-3e1c-41e8-9203-94a8f15904d1",
            "69fdb149-528d-4870-9390-73ace91dfbd6",
            "879c2454-3a74-4739-9969-04a33093842f",
            "6937ddd3-40a1-4e88-a857-b692f72f32de",
            "c8330296-cffc-4001-b33e-e6396fc3eeb0",
            "825e46ff-e351-4d39-9c29-154bbd15044e",
            "57c239ac-41f5-480e-a11d-3e25fa7f7940"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17900,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "192f8919-4d43-4af2-813d-7f2567b0ab9e",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\aliasing.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\aliasing.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7c3736ae-3860-4456-bec0-0f7d3c5d1f16",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 574,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn');\n// when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "38e96fa3-90a5-4e76-b032-dc7cac9c2cb4",
              "parentUUID": "7c3736ae-3860-4456-bec0-0f7d3c5d1f16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 1072,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "fc977deb-10b9-4096-a417-9ec9b9b1dcf5",
              "parentUUID": "7c3736ae-3860-4456-bec0-0f7d3c5d1f16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38e96fa3-90a5-4e76-b032-dc7cac9c2cb4",
            "fc977deb-10b9-4096-a417-9ec9b9b1dcf5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1646,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "548d1587-3b9b-4c76-9d63-112c856db1dc",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8dfae92f-1ece-48d8-801d-1012b1e3c016",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8160941d-6880-4594-8ab6-6b14cc127487",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 554,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first()\n// checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content')\n// chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td')\n// to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i);\n// a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last')\n// finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible');\n// for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-element’s-text-contents",
                  "err": {},
                  "uuid": "37a74433-7e2f-451e-a797-6866b20a973d",
                  "parentUUID": "8160941d-6880-4594-8ab6-6b14cc127487",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 166,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "a42b6817-caea-4399-ab18-4c5032603275",
                  "parentUUID": "8160941d-6880-4594-8ab6-6b14cc127487",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "37a74433-7e2f-451e-a797-6866b20a973d",
                "a42b6817-caea-4399-ab18-4c5032603275"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 720,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6cbb326a-74e7-4803-a934-91151c2c8e66",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 161,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be.true;\nconst o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n});\n// matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "e29c8d24-aaa7-4bb6-ab4e-49b413385623",
                  "parentUUID": "6cbb326a-74e7-4803-a934-91151c2c8e66",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 181,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should($p => {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  const texts = $p.map((i, el) => Cypress.$(el).text());\n  // jquery map returns jquery object\n  // and .get() convert this to simple array\n  const paragraphs = texts.get();\n  // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3);\n  // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "6d9eaf89-ddee-4d8a-9197-ae4d69822f34",
                  "parentUUID": "6cbb326a-74e7-4803-a934-91151c2c8e66",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 179,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div')\n// .should(cb) callback function will be retried\n.should($div => {\n  expect($div).to.have.length(1);\n  const className = $div[0].className;\n  expect(className).to.match(/heading-/);\n})\n// .then(cb) callback is not retried,\n// it either passes or fails\n.then($div => {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "156cb86a-4e9a-4bbc-a9e7-715f98761213",
                  "parentUUID": "6cbb326a-74e7-4803-a934-91151c2c8e66",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 179,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should($div => {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  const className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(`Could not find class \"heading-\" in ${className}`);\n  }\n});",
                  "err": {},
                  "uuid": "4e857972-01ec-4fde-b123-4884da951a40",
                  "parentUUID": "6cbb326a-74e7-4803-a934-91151c2c8e66",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 179,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nlet text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nconst normalizeText = s => s.replace(/\\s/g, '').toLowerCase();\ncy.get('.two-elements').find('.first').then($first => {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should($div => {\n  // we can massage text before comparing\n  const secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "0580cc79-a894-4c4a-bfa6-6811414cc90c",
                  "parentUUID": "6cbb326a-74e7-4803-a934-91151c2c8e66",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 167,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "2dbaac86-5fee-4baa-8727-0b1c35d51ea9",
                  "parentUUID": "6cbb326a-74e7-4803-a934-91151c2c8e66",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1689,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should($div => {\n  const n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "b1020286-13e5-4e93-822d-11390dde1723",
                  "parentUUID": "6cbb326a-74e7-4803-a934-91151c2c8e66",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e29c8d24-aaa7-4bb6-ab4e-49b413385623",
                "6d9eaf89-ddee-4d8a-9197-ae4d69822f34",
                "156cb86a-4e9a-4bbc-a9e7-715f98761213",
                "4e857972-01ec-4fde-b123-4884da951a40",
                "0580cc79-a894-4c4a-bfa6-6811414cc90c",
                "2dbaac86-5fee-4baa-8727-0b1c35d51ea9",
                "b1020286-13e5-4e93-822d-11390dde1723"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2735,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "545d4029-ba15-43ec-accc-fc1831f0cb96",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4672ead1-4d02-459c-8e61-f0d65bc87ea2",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 352,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li').each(($el, index, $list) => {\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "3673d6d0-f4dc-48ff-b83d-05fa77b7e5be",
              "parentUUID": "4672ead1-4d02-459c-8e61-f0d65bc87ea2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li')\n// calls the 'length' property yielding that value\n.its('length').should('be.gt', 2);",
              "err": {},
              "uuid": "f8f9af9b-4145-4b86-9727-3b974ed6a807",
              "parentUUID": "4672ead1-4d02-459c-8e61-f0d65bc87ea2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\n// https://on.cypress.io/invoke\ncy.get('.connectors-div').should('be.hidden')\n// call the jquery method 'show' on the 'div.container'\n.invoke('show').should('be.visible');",
              "err": {},
              "uuid": "ffad350f-5053-4d0b-baec-e1309df99e7e",
              "parentUUID": "4672ead1-4d02-459c-8e61-f0d65bc87ea2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nconst arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread((foo, bar, baz) => {\n  expect(foo).to.eq('foo');\n  expect(bar).to.eq('bar');\n  expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "5f1dbd0a-08df-41c3-8bec-0012cf4fc5f0",
              "parentUUID": "4672ead1-4d02-459c-8e61-f0d65bc87ea2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "b343a1b9-a357-43f5-8899-0edb7feb6b44",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 136,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li').then($lis => {\n  expect($lis, '3 items').to.have.length(3);\n  expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n  expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n  expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "8277aa7b-30cd-4fcb-8252-475eb0eb304d",
                  "parentUUID": "b343a1b9-a357-43f5-8899-0edb7feb6b44",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 153,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  return 2;\n}).then(num => {\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "005448c0-f287-48c9-bc58-81c3bd5ab07b",
                  "parentUUID": "b343a1b9-a357-43f5-8899-0edb7feb6b44",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 117,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  // note that nothing is returned from this callback\n}).then(num => {\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "257065fc-ca2d-43b5-880b-7140e4c43298",
                  "parentUUID": "b343a1b9-a357-43f5-8899-0edb7feb6b44",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 124,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cy.wrap(2);\n}).then(num => {\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "13529913-640b-46e5-a17b-baa536d18dab",
                  "parentUUID": "b343a1b9-a357-43f5-8899-0edb7feb6b44",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8277aa7b-30cd-4fcb-8252-475eb0eb304d",
                "005448c0-f287-48c9-bc58-81c3bd5ab07b",
                "257065fc-ca2d-43b5-880b-7140e4c43298",
                "13529913-640b-46e5-a17b-baa536d18dab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 530,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "3673d6d0-f4dc-48ff-b83d-05fa77b7e5be",
            "f8f9af9b-4145-4b86-9727-3b974ed6a807",
            "ffad350f-5053-4d0b-baec-e1309df99e7e",
            "5f1dbd0a-08df-41c3-8bec-0012cf4fc5f0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 794,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "086d27c5-9911-41e2-aab6-9c8d49eb0d1a",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\cookies.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\cookies.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "68836b15-3971-49e1-b171-ced815ed1a9a",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 469,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click();\n// cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "f2129bef-e7f6-4885-91e4-8fd1566abdf3",
              "parentUUID": "68836b15-3971-49e1-b171-ced815ed1a9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies",
              "timedOut": null,
              "duration": 281,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click();\n// cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(cookies => {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'token');\n  expect(cookies[0]).to.have.property('value', '123ABC');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "3ac63d1b-9488-430c-8c01-1672e4ba1a4b",
              "parentUUID": "68836b15-3971-49e1-b171-ced815ed1a9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar');\n// cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "707eb227-c77c-4c55-ad06-b535276e631c",
              "parentUUID": "68836b15-3971-49e1-b171-ced815ed1a9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 276,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC');\n// cy.clearCookies() yields null\ncy.clearCookie('token').should('be.null');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "329941d4-b84e-4e64-ad54-06628dd2102d",
              "parentUUID": "68836b15-3971-49e1-b171-ced815ed1a9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies",
              "timedOut": null,
              "duration": 290,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1);\n// cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "c408ac2c-88f1-4ae1-819b-a0588bc6af48",
              "parentUUID": "68836b15-3971-49e1-b171-ced815ed1a9a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2129bef-e7f6-4885-91e4-8fd1566abdf3",
            "3ac63d1b-9488-430c-8c01-1672e4ba1a4b",
            "707eb227-c77c-4c55-ad06-b535276e631c",
            "329941d4-b84e-4e64-ad54-06628dd2102d",
            "c408ac2c-88f1-4ae1-819b-a0588bc6af48"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1501,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "25c8d4d8-6f89-4c83-a8a0-6ce227ecb2bd",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7fe466d9-0c03-4bf8-83e0-f35e8b9c3b03",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 441,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, (subject, method) => {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log';\n  // log the subject to the console\n  console[method]('The subject is', subject);\n  // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n});\ncy.get('button').console('info').then($button => {\n  // subject is still $button\n});",
              "err": {},
              "uuid": "9c5d263a-50dd-4252-873c-8648068276da",
              "parentUUID": "7fe466d9-0c03-4bf8-83e0-f35e8b9c3b03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c5d263a-50dd-4252-873c-8648068276da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 441,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cdb04e83-34c5-43c6-9b6f-03f650d2de15",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true);\n// Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "aeaa2596-cb22-4605-ad59-480a3267d3c7",
              "parentUUID": "cdb04e83-34c5-43c6-9b6f-03f650d2de15",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 482,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok');\n// preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {
                "message": "CypressError: `Cypress.Cookies.preserveOnce()` was removed in Cypress version 12.0.0. Please update to use `cy.session()` instead.\n\nhttps://on.cypress.io/session",
                "estack": "CypressError: `Cypress.Cookies.preserveOnce()` was removed in Cypress version 12.0.0. Please update to use `cy.session()` instead.\n\nhttps://on.cypress.io/session\n    at Object.preserveOnce (https://example.cypress.io/__cypress/runner/cypress_runner.js:150547:75)\n    at runnable.fn (https://example.cypress.io/__cypress/runner/cypress_runner.js:151423:19)\n    at callFn (https://example.cypress.io/__cypress/runner/cypress_runner.js:104964:21)\n    at ../driver/node_modules/mocha/lib/runnable.js.Runnable.run (https://example.cypress.io/__cypress/runner/cypress_runner.js:104951:7)\n    at <unknown> (https://example.cypress.io/__cypress/runner/cypress_runner.js:158412:30)\n    at PassThroughHandlerContext.finallyHandler (https://example.cypress.io/__cypress/runner/cypress_runner.js:5468:23)\n    at PassThroughHandlerContext.tryCatcher (https://example.cypress.io/__cypress/runner/cypress_runner.js:8914:23)\n    at Promise._settlePromiseFromHandler (https://example.cypress.io/__cypress/runner/cypress_runner.js:6849:31)\n    at Promise._settlePromise (https://example.cypress.io/__cypress/runner/cypress_runner.js:6906:18)\n    at Promise._settlePromise0 (https://example.cypress.io/__cypress/runner/cypress_runner.js:6951:10)\n    at Promise._settlePromises (https://example.cypress.io/__cypress/runner/cypress_runner.js:7031:18)\n    at _drainQueueStep (https://example.cypress.io/__cypress/runner/cypress_runner.js:3621:12)\n    at _drainQueue (https://example.cypress.io/__cypress/runner/cypress_runner.js:3614:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:3630:5)\n    at Async.drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:3500:14)",
                "diff": null
              },
              "uuid": "411aa7aa-350c-4e94-bbde-0fe603faddd2",
              "parentUUID": "cdb04e83-34c5-43c6-9b6f-03f650d2de15",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 461,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: 'session_id'\n});",
              "err": {
                "message": "CypressError: `Cypress.Cookies.defaults()` was removed in Cypress version 12.0.0. Please update to use `cy.session()` instead.\n\nhttps://on.cypress.io/session",
                "estack": "CypressError: `Cypress.Cookies.defaults()` was removed in Cypress version 12.0.0. Please update to use `cy.session()` instead.\n\nhttps://on.cypress.io/session\n    at Object.defaults (https://example.cypress.io/__cypress/runner/cypress_runner.js:150567:75)\n    at runnable.fn (https://example.cypress.io/__cypress/runner/cypress_runner.js:151423:19)\n    at callFn (https://example.cypress.io/__cypress/runner/cypress_runner.js:104964:21)\n    at ../driver/node_modules/mocha/lib/runnable.js.Runnable.run (https://example.cypress.io/__cypress/runner/cypress_runner.js:104951:7)\n    at <unknown> (https://example.cypress.io/__cypress/runner/cypress_runner.js:158412:30)\n    at PassThroughHandlerContext.finallyHandler (https://example.cypress.io/__cypress/runner/cypress_runner.js:5468:23)\n    at PassThroughHandlerContext.tryCatcher (https://example.cypress.io/__cypress/runner/cypress_runner.js:8914:23)\n    at Promise._settlePromiseFromHandler (https://example.cypress.io/__cypress/runner/cypress_runner.js:6849:31)\n    at Promise._settlePromise (https://example.cypress.io/__cypress/runner/cypress_runner.js:6906:18)\n    at Promise._settlePromise0 (https://example.cypress.io/__cypress/runner/cypress_runner.js:6951:10)\n    at Promise._settlePromises (https://example.cypress.io/__cypress/runner/cypress_runner.js:7031:18)\n    at _drainQueueStep (https://example.cypress.io/__cypress/runner/cypress_runner.js:3621:12)\n    at _drainQueue (https://example.cypress.io/__cypress/runner/cypress_runner.js:3614:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:3630:5)\n    at Async.drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:3500:14)",
                "diff": null
              },
              "uuid": "19eff343-ef11-4ea7-a17b-6ccedfc93193",
              "parentUUID": "cdb04e83-34c5-43c6-9b6f-03f650d2de15",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aeaa2596-cb22-4605-ad59-480a3267d3c7"
          ],
          "failures": [
            "411aa7aa-350c-4e94-bbde-0fe603faddd2",
            "19eff343-ef11-4ea7-a17b-6ccedfc93193"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1204,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a14b0560-ff3a-4776-b79b-b6a99ddb279a",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "657328d2-f273-4d7f-89d2-1b16c3163624",
              "parentUUID": "a14b0560-ff3a-4776-b79b-b6a99ddb279a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "657328d2-f273-4d7f-89d2-1b16c3163624"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 128,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e565e3ad-15cb-4530-93e5-85efca3dfe82",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 382,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nlet myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000);\n// this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {
                "message": "AssertionError: expected { Object (projectId, setupNodeEvents, ...) } to have property 'baseUrl' of null, but got 'http://www.webdriveruniversity.com'",
                "estack": "AssertionError: expected { Object (projectId, setupNodeEvents, ...) } to have property 'baseUrl' of null, but got 'http://www.webdriveruniversity.com'\n    at Context.eval (webpack:///./cypress/e2e/2-advanced-examples/cypress_api.cy.js:93:29)",
                "diff": null
              },
              "uuid": "3de3ba08-387c-47d0-add5-a6f049e2b4c0",
              "parentUUID": "e565e3ad-15cb-4530-93e5-85efca3dfe82",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3de3ba08-387c-47d0-add5-a6f049e2b4c0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 382,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6101b18e-a7dc-48c1-9dd2-c6b1b545dd8a",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nlet visibleP = Cypress.$('.dom-p p.visible').get(0);\n// our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
              "err": {},
              "uuid": "d758616d-1673-456c-965c-60d12e552f67",
              "parentUUID": "6101b18e-a7dc-48c1-9dd2-c6b1b545dd8a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d758616d-1673-456c-965c-60d12e552f67"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 222,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "75bdef8f-4438-4cb4-a71f-fcb2b302c9bf",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n});\n// get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local');\n// set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/');\n// get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "493711cc-297a-4000-bd59-9cdded25d9b8",
              "parentUUID": "75bdef8f-4438-4cb4-a71f-fcb2b302c9bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "493711cc-297a-4000-bd59-9cdded25d9b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 169,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c00e221d-a668-4875-b7a2-e5ddee1b4e3d",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "85adc07c-76dc-48df-976a-9dec9f736454",
              "parentUUID": "c00e221d-a668-4875-b7a2-e5ddee1b4e3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85adc07c-76dc-48df-976a-9dec9f736454"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 132,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2a1bc7ab-84fb-4b83-bcba-4047c843fa20",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "712a3975-f7ca-4da8-8548-7e25183d39e0",
              "parentUUID": "2a1bc7ab-84fb-4b83-bcba-4047c843fa20",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "712a3975-f7ca-4da8-8548-7e25183d39e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 175,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a90e143f-6616-4597-ab79-251a0972edad",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "3fb5b91b-b498-40cf-9b2e-b2136efc67ca",
              "parentUUID": "a90e143f-6616-4597-ab79-251a0972edad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3fb5b91b-b498-40cf-9b2e-b2136efc67ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 214,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b8f0194c-373a-4ede-8567-543fd0d19e5a",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "98072531-19d9-4997-99ec-a60642a3561f",
              "parentUUID": "b8f0194c-373a-4ede-8567-543fd0d19e5a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "98072531-19d9-4997-99ec-a60642a3561f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 177,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e29aae0f-7795-4020-8c49-dc9afe2ce174",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\files.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\files.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2a94fdd1-aa86-41c2-a1a6-c5fdc0312a7c",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 577,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\n// when application makes an Ajax request matching \"GET **/comments/*\"\n// Cypress will intercept it and reply with the object in `example.json` fixture\ncy.intercept('GET', '**/comments/*', {\n  fixture: 'example.json'\n}).as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('response.body').should('have.property', 'name').and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "51e8b818-116e-4f2f-a6c7-fb8f898598a3",
              "parentUUID": "2a94fdd1-aa86-41c2-a1a6-c5fdc0312a7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context').to.deep.equal(requiredExample);\n// or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\ncy.wrap(this.example).should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "0932eae6-d491-4db5-ad5a-475fa4e97f97",
              "parentUUID": "2a94fdd1-aa86-41c2-a1a6-c5fdc0312a7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile(Cypress.config('configFile')).then(config => {\n  expect(config).to.be.an('string');\n});",
              "err": {},
              "uuid": "fee43a49-4530-4140-8cd1-973f6e370fb9",
              "parentUUID": "2a94fdd1-aa86-41c2-a1a6-c5fdc0312a7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 456,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncy.fixture('users').should(users => {\n  expect(users[0].name).to.exist;\n});\n// JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile('cypress/fixtures/profile.json', {\n  id: 8739,\n  name: 'Jane',\n  email: 'jane@example.com'\n});\ncy.fixture('profile').should(profile => {\n  expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "911a565d-59e5-4ea5-98b5-d8feabb49b21",
              "parentUUID": "2a94fdd1-aa86-41c2-a1a6-c5fdc0312a7c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51e8b818-116e-4f2f-a6c7-fb8f898598a3",
            "0932eae6-d491-4db5-ad5a-475fa4e97f97",
            "fee43a49-4530-4140-8cd1-973f6e370fb9",
            "911a565d-59e5-4ea5-98b5-d8feabb49b21"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1334,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ba83e1a3-03cc-4aff-b0d8-a84465419bd1",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\local_storage.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\local_storage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8fdfcccb-1696-4253-aab0-04d9732d0fb1",
          "title": "Local Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in local storage",
              "fullTitle": "Local Storage cy.clearLocalStorage() - clear all data in local storage",
              "timedOut": null,
              "duration": 379,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\n// clearLocalStorage() yields the localStorage object\ncy.clearLocalStorage().should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.be.null;\n  expect(ls.getItem('prop3')).to.be.null;\n});\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\n// Clear key matching string in Local Storage\ncy.clearLocalStorage('prop1').should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.eq('blue');\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\n// Clear keys matching regex in Local Storage\ncy.clearLocalStorage(/prop1|2/).should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.be.null;\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://example.cypress.io/commands/local-storage\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Local Storage`",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://example.cypress.io/commands/local-storage\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Local Storage`\n    at <unknown> (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:138236:84)\n    at visitFailedByErr (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:137644:12)\n    at <unknown> (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:138219:13)\n    at tryCatcher (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:8914:23)\n    at Promise._settlePromiseFromHandler (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:6849:31)\n    at Promise._settlePromise (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:6906:18)\n    at Promise._settlePromise0 (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:6951:10)\n    at Promise._settlePromises (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:7027:18)\n    at _drainQueueStep (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:3621:12)\n    at _drainQueue (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:3614:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:3630:5)\n    at Async.drainQueues (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:3500:14)\nFrom Your Spec Code:\n    at Context.eval (webpack:///./cypress/e2e/2-advanced-examples/local_storage.cy.js:5:7)",
                "diff": null
              },
              "uuid": "3e590f33-7f31-4252-a41d-d3f7757fce18",
              "parentUUID": "8fdfcccb-1696-4253-aab0-04d9732d0fb1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3e590f33-7f31-4252-a41d-d3f7757fce18"
          ],
          "pending": [],
          "skipped": [],
          "duration": 379,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3a3966e2-4291-4e8c-8b88-5e02db0e5983",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\location.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\location.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9fecaff5-8845-433c-b9cc-1d2d44cd2866",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 328,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "be1f47aa-5898-424f-a6e2-c73417af5d5e",
              "parentUUID": "9fecaff5-8845-433c-b9cc-1d2d44cd2866",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(location => {\n  expect(location.hash).to.be.empty;\n  expect(location.href).to.eq('https://example.cypress.io/commands/location');\n  expect(location.host).to.eq('example.cypress.io');\n  expect(location.hostname).to.eq('example.cypress.io');\n  expect(location.origin).to.eq('https://example.cypress.io');\n  expect(location.pathname).to.eq('/commands/location');\n  expect(location.port).to.eq('');\n  expect(location.protocol).to.eq('https:');\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "97adf003-f6de-4396-afc8-679e5c8d3c19",
              "parentUUID": "9fecaff5-8845-433c-b9cc-1d2d44cd2866",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "e0007dd5-d6a7-4406-984a-e5c133044dd2",
              "parentUUID": "9fecaff5-8845-433c-b9cc-1d2d44cd2866",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be1f47aa-5898-424f-a6e2-c73417af5d5e",
            "97adf003-f6de-4396-afc8-679e5c8d3c19",
            "e0007dd5-d6a7-4406-984a-e5c133044dd2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 575,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bdc6e7dd-3e18-4071-b0de-db3e60b8c401",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5bfca785-7341-4258-a237-f72000b9d01c",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 735,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get('.misc-table').within(() => {\n  // ends the current chain and yields null\n  cy.contains('Cheryl').click().end();\n  // queries the entire table again\n  cy.contains('Charles').click();\n});",
              "err": {},
              "uuid": "18463194-26c5-4240-8d1a-adcdaade4aa9",
              "parentUUID": "5bfca785-7341-4258-a237-f72000b9d01c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 690,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(`Platform ${Cypress.platform} architecture ${Cypress.arch}`);\n// on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nconst isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n  cy.log('Skipping test on CircleCI');\n  return;\n}\n// cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\nconst isShippable = Cypress.platform === 'linux' && Cypress.env('shippable');\nif (isShippable) {\n  cy.log('Skipping test on ShippableCI');\n  return;\n}\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n  cy.exec(`print ${Cypress.config('configFile')}`).its('stderr').should('be.empty');\n} else {\n  cy.exec(`cat ${Cypress.config('configFile')}`).its('stderr').should('be.empty');\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {
                "message": "CypressError: `cy.exec('echo Jane Lane')` failed because the command exited with a non-zero code.\n\nPass `{failOnNonZeroExit: false}` to ignore exit code failures.\n\nInformation about the failure:\nCode: 127\n\nStderr:\n/usr/bin/bash: /s: No such file or directory\n\nhttps://on.cypress.io/exec",
                "estack": "CypressError: `cy.exec('echo Jane Lane')` failed because the command exited with a non-zero code.\n\nPass `{failOnNonZeroExit: false}` to ignore exit code failures.\n\nInformation about the failure:\nCode: 127\n\nStderr:\n/usr/bin/bash: /s: No such file or directory\n\nhttps://on.cypress.io/exec\n    at <unknown> (https://example.cypress.io/__cypress/runner/cypress_runner.js:136664:85)\n    at tryCatcher (https://example.cypress.io/__cypress/runner/cypress_runner.js:8914:23)\n    at Promise._settlePromiseFromHandler (https://example.cypress.io/__cypress/runner/cypress_runner.js:6849:31)\n    at Promise._settlePromise (https://example.cypress.io/__cypress/runner/cypress_runner.js:6906:18)\n    at Promise._settlePromise0 (https://example.cypress.io/__cypress/runner/cypress_runner.js:6951:10)\n    at Promise._settlePromises (https://example.cypress.io/__cypress/runner/cypress_runner.js:7031:18)\n    at _drainQueueStep (https://example.cypress.io/__cypress/runner/cypress_runner.js:3621:12)\n    at _drainQueue (https://example.cypress.io/__cypress/runner/cypress_runner.js:3614:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:3630:5)\n    at Async.drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:3500:14)\nFrom Your Spec Code:\n    at Context.eval (webpack:///./cypress/e2e/2-advanced-examples/misc.cy.js:54:7)",
                "diff": null
              },
              "uuid": "40507aee-3de6-4fdd-8eb5-dc30ebc88e9b",
              "parentUUID": "5bfca785-7341-4258-a237-f72000b9d01c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 323,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "0ac5a0f2-03ef-44c6-982a-08e016fc97b8",
              "parentUUID": "5bfca785-7341-4258-a237-f72000b9d01c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "e9e75af4-fd90-4e13-8356-26d2faafe09e",
              "parentUUID": "5bfca785-7341-4258-a237-f72000b9d01c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "dda7d3a0-371f-40f8-8b16-1f0c71229355",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 1293,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "fb49db88-8d41-48af-b2bf-22620591eda5",
                  "parentUUID": "dda7d3a0-371f-40f8-8b16-1f0c71229355",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 178,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot() {},\n  onAfterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "589983d4-0594-48ec-a123-d28c0762be9a",
                  "parentUUID": "dda7d3a0-371f-40f8-8b16-1f0c71229355",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fb49db88-8d41-48af-b2bf-22620591eda5",
                "589983d4-0594-48ec-a123-d28c0762be9a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1471,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "18463194-26c5-4240-8d1a-adcdaade4aa9",
            "0ac5a0f2-03ef-44c6-982a-08e016fc97b8",
            "e9e75af4-fd90-4e13-8356-26d2faafe09e"
          ],
          "failures": [
            "40507aee-3de6-4fdd-8eb5-dc30ebc88e9b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1895,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "336f8ea6-bd5b-4362-a121-31f94b14c694",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\navigation.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\navigation.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7efaf676-a77a-4adb-811c-cf27db37a246",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 1178,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation');\n// clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation');\n// clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "c89bab2b-46f3-47fa-a27b-3c85eeaadbe4",
              "parentUUID": "7efaf676-a77a-4adb-811c-cf27db37a246",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 590,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload();\n// reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "90cefc04-c23f-4126-8400-8035538c1789",
              "parentUUID": "7efaf676-a77a-4adb-811c-cf27db37a246",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 557,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  },\n  onLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  }\n});",
              "err": {},
              "uuid": "0d6c10ff-0845-4ede-8d43-3541d6c2f206",
              "parentUUID": "7efaf676-a77a-4adb-811c-cf27db37a246",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c89bab2b-46f3-47fa-a27b-3c85eeaadbe4",
            "90cefc04-c23f-4126-8400-8035538c1789",
            "0d6c10ff-0845-4ede-8d43-3541d6c2f206"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2325,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fdeabfdf-a774-4017-b293-1dfe7afa2e4b",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\network_requests.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\network_requests.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5ef023aa-172f-45ab-a011-55e119d78b0c",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 917,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments').should(response => {\n  expect(response.status).to.eq(200);\n  // the server sometimes gets an extra comment posted from another machine\n  // which gets returned as 1 extra object\n  expect(response.body).to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.have.property('headers');\n  expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "e1a64e5e-f2ef-48c8-ab72-ac749d848e6d",
              "parentUUID": "5ef023aa-172f-45ab-a011-55e119d78b0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 683,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.cypress.io/comments').then(response => {\n  // https://on.cypress.io/assertions\n  expect(response).property('status').to.equal(200);\n  expect(response).property('body').to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "25d55193-02db-4982-ac8b-ac51c4946556",
              "parentUUID": "5ef023aa-172f-45ab-a011-55e119d78b0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 416,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n  url: 'https://jsonplaceholder.cypress.io/comments',\n  qs: {\n    postId: 1,\n    id: 3\n  }\n}).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n.should('contain', {\n  postId: 1,\n  id: 3\n});",
              "err": {},
              "uuid": "c226e239-1cc1-42d1-a166-1a20744e1232",
              "parentUUID": "5ef023aa-172f-45ab-a011-55e119d78b0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 651,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body') // yields the response object\n.its('0') // yields the first element of the returned list\n// the above two commands its('body').its('0')\n// can be written as its('body.0')\n// if you do not care about TypeScript checks\n.then(user => {\n  expect(user).property('id').to.be.a('number');\n  // make a new post on behalf of the user\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  });\n})\n// note that the value here is the returned value of the 2nd request\n// which is the new post object\n.then(response => {\n  expect(response).property('status').to.equal(201); // new entity created\n  expect(response).property('body').to.contain({\n    title: 'Cypress Test Runner'\n  });\n  // we don't know the exact post id - only that it will be > 100\n  // since JSONPlaceholder has built-in 100 posts\n  expect(response.body).property('id').to.be.a('number').and.to.be.gt(100);\n  // we don't know the user id here - since it was in above closure\n  // so in this test just confirm that the property is there\n  expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "c6fe1a72-49bf-4bad-abca-c78a50fe417f",
              "parentUUID": "5ef023aa-172f-45ab-a011-55e119d78b0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 670,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body').its('0') // yields the first element of the returned list\n.as('user') // saves the object in the test context\n.then(function () {\n  // NOTE 👀\n  //  By the time this callback runs the \"as('user')\" command\n  //  has saved the user object in the test context.\n  //  To access the test context we need to use\n  //  the \"function () { ... }\" callback form,\n  //  otherwise \"this\" points at a wrong or undefined object!\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: this.user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  }).its('body').as('post'); // save the new post from the response\n}).then(function () {\n  // When this callback runs, both \"cy.request\" API commands have finished\n  // and the test context has \"user\" and \"post\" objects set.\n  // Let's verify them.\n  expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "2721e437-66b5-4c5e-9236-82dce3bb7384",
              "parentUUID": "5ef023aa-172f-45ab-a011-55e119d78b0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.intercept() - route responses to matching requests",
              "fullTitle": "Network Requests cy.intercept() - route responses to matching requests",
              "timedOut": null,
              "duration": 1718,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/intercept\nlet message = 'whoa, this comment does not exist';\n// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);\n// Listen to POST to comments\ncy.intercept('POST', '**/comments').as('postComment');\n// we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-post').click();\ncy.wait('@postComment').should(({\n  request,\n  response\n}) => {\n  expect(request.body).to.include('email');\n  expect(request.headers).to.have.property('content-type');\n  expect(response && response.body).to.have.property('name', 'Using POST in cy.intercept()');\n});\n// Stub a response to PUT comments/ ****\ncy.intercept({\n  method: 'PUT',\n  url: '**/comments/*'\n}, {\n  statusCode: 404,\n  body: {\n    error: message\n  },\n  headers: {\n    'access-control-allow-origin': '*'\n  },\n  delayMs: 500\n}).as('putComment');\n// we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-put').click();\ncy.wait('@putComment');\n// our 404 statusCode logic in scripts.js executed\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "1e6d25a2-7e9e-4509-8568-ef861f2eb2c3",
              "parentUUID": "5ef023aa-172f-45ab-a011-55e119d78b0c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1a64e5e-f2ef-48c8-ab72-ac749d848e6d",
            "25d55193-02db-4982-ac8b-ac51c4946556",
            "c226e239-1cc1-42d1-a166-1a20744e1232",
            "c6fe1a72-49bf-4bad-abca-c78a50fe417f",
            "2721e437-66b5-4c5e-9236-82dce3bb7384",
            "1e6d25a2-7e9e-4509-8568-ef861f2eb2c3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5055,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9a3d4f48-71cb-49a9-93f0-bec62bfca03d",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\querying.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\querying.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1358afb8-9b66-4b90-810e-7e6f8c214e0c",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 511,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncy.get('.query-btn').should('contain', 'Button');\ncy.get('#querying .well>button:first').should('contain', 'Button');\n//              ↲\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example');\n// 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example');\n// or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static');\n// or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "2ccebf11-fed0-4f5a-858f-4543627472a5",
              "parentUUID": "1358afb8-9b66-4b90-810e-7e6f8c214e0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get('.query-list').contains('bananas').should('have.class', 'third');\n// we can pass a regexp to `.contains()`\ncy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\ncy.get('.query-list').contains('apples').should('have.class', 'first');\n// passing a selector to contains will\n// yield the selector containing the text\ncy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\ncy.get('.query-button').contains('Save Form').should('have.class', 'btn');",
              "err": {},
              "uuid": "17ee9444-1da6-4c13-a52f-b7d34ccfe446",
              "parentUUID": "1358afb8-9b66-4b90-810e-7e6f8c214e0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get('.query-form').within(() => {\n  cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n  cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "16658932-cad9-4800-97d0-e3ecab04adef",
              "parentUUID": "1358afb8-9b66-4b90-810e-7e6f8c214e0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncy.get('.query-ul').within(() => {\n  // In this within, the root is now the ul DOM element\n  cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "aaca4091-12b2-4df5-9add-e691ac8f87d5",
              "parentUUID": "1358afb8-9b66-4b90-810e-7e6f8c214e0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 797,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(() => {\n  // Worst - too generic, no context\n  cy.get('button').click();\n  // Bad. Coupled to styling. Highly subject to change.\n  cy.get('.btn.btn-large').click();\n  // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get('[name=submission]').click();\n  // Better. But still coupled to styling or JS event listeners.\n  cy.get('#main').click();\n  // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get('#main[role=button]').click();\n  // Much better. But still coupled to text content that may change.\n  cy.contains('Submit').click();\n  // Best. Insulated from all changes.\n  cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "475bb7b4-11d1-45af-8284-5e80bd8db6d1",
              "parentUUID": "1358afb8-9b66-4b90-810e-7e6f8c214e0c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ccebf11-fed0-4f5a-858f-4543627472a5",
            "17ee9444-1da6-4c13-a52f-b7d34ccfe446",
            "16658932-cad9-4800-97d0-e3ecab04adef",
            "aaca4091-12b2-4df5-9add-e691ac8f87d5",
            "475bb7b4-11d1-45af-8284-5e80bd8db6d1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1863,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9dd62ca2-fcac-40e6-9c67-4dd9180dde58",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\spies_stubs_clocks.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\spies_stubs_clocks.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0a2d65e2-f8b3-4d6e-83f5-c2532e7d51b5",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 747,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  foo() {}\n};\nconst spy = cy.spy(obj, 'foo').as('anyArgs');\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "0b6a5816-470f-4dcf-9fa8-e2f0f3738788",
              "parentUUID": "0a2d65e2-f8b3-4d6e-83f5-c2532e7d51b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2559,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * Prints the argument passed\n   * @param x {any}\n  */\n  foo(x) {\n    console.log('obj.foo called with', x);\n  }\n};\ncy.spy(obj, 'foo').as('foo');\nsetTimeout(() => {\n  obj.foo('first');\n}, 500);\nsetTimeout(() => {\n  obj.foo('second');\n}, 2500);\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "223730cb-31f1-4aa7-ab5f-2e32588db6e5",
              "parentUUID": "0a2d65e2-f8b3-4d6e-83f5-c2532e7d51b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 171,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * prints both arguments to the console\n   * @param a {string}\n   * @param b {string}\n  */\n  foo(a, b) {\n    console.log('a', a, 'b', b);\n  }\n};\nconst stub = cy.stub(obj, 'foo').as('foo');\nobj.foo('foo', 'bar');\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "c45606e1-b357-45c3-8bed-a8e774527e71",
              "parentUUID": "0a2d65e2-f8b3-4d6e-83f5-c2532e7d51b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#clock-div').click().should('have.text', '1489449600');",
              "err": {},
              "uuid": "604f945a-d972-45d2-8647-cc74b717778d",
              "parentUUID": "0a2d65e2-f8b3-4d6e-83f5-c2532e7d51b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 365,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#tick-div').click().should('have.text', '1489449600');\ncy.tick(10000); // 10 seconds passed\ncy.get('#tick-div').click().should('have.text', '1489449610');",
              "err": {},
              "uuid": "69da4196-1a82-41a8-8416-0c3f3171a067",
              "parentUUID": "0a2d65e2-f8b3-4d6e-83f5-c2532e7d51b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() matches depending on arguments",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
              "timedOut": null,
              "duration": 65,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst greeter = {\n  /**\n   * Greets a person\n   * @param {string} name\n  */\n  greet(name) {\n    return `Hello, ${name}!`;\n  }\n};\ncy.stub(greeter, 'greet').callThrough() // if you want non-matched calls to call the real method\n.withArgs(Cypress.sinon.match.string).returns('Hi').withArgs(Cypress.sinon.match.number).throws(new Error('Invalid name'));\nexpect(greeter.greet('World')).to.equal('Hi');\nexpect(() => greeter.greet(42)).to.throw('Invalid name');\nexpect(greeter.greet).to.have.been.calledTwice;\n// non-matched calls goes the actual method\nexpect(greeter.greet()).to.equal('Hello, undefined!');",
              "err": {},
              "uuid": "55e845b4-5df5-4fab-85ae-f9b80f48dc25",
              "parentUUID": "0a2d65e2-f8b3-4d6e-83f5-c2532e7d51b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "matches call arguments using Sinon matchers",
              "fullTitle": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst calculator = {\n  /**\n   * returns the sum of two arguments\n   * @param a {number}\n   * @param b {number}\n  */\n  add(a, b) {\n    return a + b;\n  }\n};\nconst spy = cy.spy(calculator, 'add').as('add');\nexpect(calculator.add(2, 3)).to.equal(5);\n// if we want to assert the exact values used during the call\nexpect(spy).to.be.calledWith(2, 3);\n// let's confirm \"add\" method was called with two numbers\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match.number);\n// alternatively, provide the value to match\nexpect(spy).to.be.calledWith(Cypress.sinon.match(2), Cypress.sinon.match(3));\n// match any value\nexpect(spy).to.be.calledWith(Cypress.sinon.match.any, 3);\n// match any value from a list\nexpect(spy).to.be.calledWith(Cypress.sinon.match.in([1, 2, 3]), 3);\n/**\n * Returns true if the given number is even\n * @param {number} x\n */\nconst isEven = x => x % 2 === 0;\n// expect the value to pass a custom predicate function\n// the second argument to \"sinon.match(predicate, message)\" is\n// shown if the predicate does not pass and assertion fails\nexpect(spy).to.be.calledWith(Cypress.sinon.match(isEven, 'isEven'), 3);\n/**\n * Returns a function that checks if a given number is larger than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nconst isGreaterThan = limit => x => x > limit;\n/**\n * Returns a function that checks if a given number is less than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nconst isLessThan = limit => x => x < limit;\n// you can combine several matchers using \"and\", \"or\"\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(2), '> 2').and(Cypress.sinon.match(isLessThan(4), '< 4')));\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(200), '> 200').or(Cypress.sinon.match(3)));\n// matchers can be used from BDD assertions\ncy.get('@add').should('have.been.calledWith', Cypress.sinon.match.number, Cypress.sinon.match(3));\n// you can alias matchers for shorter test code\nconst {\n  match: M\n} = Cypress.sinon;\ncy.get('@add').should('have.been.calledWith', M.number, M(3));",
              "err": {},
              "uuid": "2966bb7d-fb3c-49eb-9241-905c4a4c9c8d",
              "parentUUID": "0a2d65e2-f8b3-4d6e-83f5-c2532e7d51b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b6a5816-470f-4dcf-9fa8-e2f0f3738788",
            "223730cb-31f1-4aa7-ab5f-2e32588db6e5",
            "c45606e1-b357-45c3-8bed-a8e774527e71",
            "604f945a-d972-45d2-8647-cc74b717778d",
            "69da4196-1a82-41a8-8416-0c3f3171a067",
            "55e845b4-5df5-4fab-85ae-f9b80f48dc25",
            "2966bb7d-fb3c-49eb-9241-905c4a4c9c8d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4223,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a0e84be2-98c9-4938-bab0-d66525f1c226",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 477,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');",
              "err": {},
              "uuid": "7ea72e2a-9370-4c91-a44c-6c170a0dd9d0",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');",
              "err": {},
              "uuid": "4d301c45-ab3f-4183-9738-395b067f0ce5",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 173,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get('.traversal-list>li').eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "d73df493-2e18-4c90-b245-2edca7824908",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get('.traversal-nav>li').filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "803ae58f-f750-4fb4-9473-dc57074e3705",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "85963d04-47fd-439c-b843-4bd216001ae4",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get('.traversal-table td').first().should('contain', '1');",
              "err": {},
              "uuid": "0047736d-01f8-499e-9bb4-0cec4b66c3f7",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 284,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn').last().should('contain', 'Submit');",
              "err": {},
              "uuid": "7361fa5b-5b03-4cc8-9746-2b7b2a5f4f62",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "60b6f79b-780a-4e3c-8539-0a3421c496e5",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "03135cff-a0a0-4c02-8aa6-87df3efcf477",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get('#veggies').nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "01dba7de-f8c1-4387-90ab-31d63fb1ad0c",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "90913fdb-51b6-42d1-a6c1-f63c1b8cba1a",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "e93df8c5-a1ea-4e23-a330-fc232f23b873",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "1fd4c3d5-5a19-47fc-923a-a756668b115f",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);",
              "err": {},
              "uuid": "dad96718-71d0-4e6e-977c-a0f447cefbe0",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 157,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "45120750-150c-42bb-95e9-2c34116ebb79",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevall\ncy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "fa65d92a-e2f3-4ffa-9b38-31ac08006242",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevuntil\ncy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "e99ecf2e-ac39-4c32-99bf-9bd439405136",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active').siblings().should('have.length', 2);",
              "err": {},
              "uuid": "d701a2cf-2053-4555-a90c-86affdbccc40",
              "parentUUID": "2bff347b-d511-4853-9d5e-dd54caa6efc6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ea72e2a-9370-4c91-a44c-6c170a0dd9d0",
            "4d301c45-ab3f-4183-9738-395b067f0ce5",
            "d73df493-2e18-4c90-b245-2edca7824908",
            "803ae58f-f750-4fb4-9473-dc57074e3705",
            "85963d04-47fd-439c-b843-4bd216001ae4",
            "0047736d-01f8-499e-9bb4-0cec4b66c3f7",
            "7361fa5b-5b03-4cc8-9746-2b7b2a5f4f62",
            "60b6f79b-780a-4e3c-8539-0a3421c496e5",
            "03135cff-a0a0-4c02-8aa6-87df3efcf477",
            "01dba7de-f8c1-4387-90ab-31d63fb1ad0c",
            "90913fdb-51b6-42d1-a6c1-f63c1b8cba1a",
            "e93df8c5-a1ea-4e23-a330-fc232f23b873",
            "1fd4c3d5-5a19-47fc-923a-a756668b115f",
            "dad96718-71d0-4e6e-977c-a0f447cefbe0",
            "45120750-150c-42bb-95e9-2c34116ebb79",
            "fa65d92a-e2f3-4ffa-9b38-31ac08006242",
            "e99ecf2e-ac39-4c32-99bf-9bd439405136",
            "d701a2cf-2053-4555-a90c-86affdbccc40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3218,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fb59c3c0-a93a-4bf7-b613-140e7aae8e2a",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\utilities.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\utilities.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c001a5f2-cb2a-471a-9924-5a9200fe8048",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 579,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  let ids = Cypress._.chain(response.body).map('id').take(3).value();\n  expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "fca4c000-72fe-4eca-8e99-57121695a622",
              "parentUUID": "c001a5f2-cb2a-471a-9924-5a9200fe8048",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 250,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nlet $li = Cypress.$('.utility-jquery li:first');\ncy.wrap($li).should('not.have.class', 'active').click().should('have.class', 'active');",
              "err": {},
              "uuid": "df9e0b09-8879-4f16-94a0-1a8ba15eb1ac",
              "parentUUID": "c001a5f2-cb2a-471a-9924-5a9200fe8048",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 449,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get('.utility-blob').then($div => {\n  // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n  // get the dataUrl string for the javascript-logo\n  return Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(dataUrl => {\n    // create an <img> element and set its src to the dataUrl\n    let img = Cypress.$('<img />', {\n      src: dataUrl\n    });\n    // need to explicitly return cy here since we are initially returning\n    // the Cypress.Blob.imgSrcToDataURL promise to our test\n    // append the image\n    $div.append(img);\n    cy.get('.utility-blob img').click().should('have.attr', 'src', dataUrl);\n  });\n});",
              "err": {},
              "uuid": "b4b643f3-f4b3-492e-961d-71a4175c94c6",
              "parentUUID": "c001a5f2-cb2a-471a-9924-5a9200fe8048",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nlet matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'matching wildcard').to.be.true;\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.false;\n// ** matches against all downstream path segments\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.true;\n// whereas * matches only the next path segment\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n  matchBase: false\n});\nexpect(matching, 'comments').to.be.false;",
              "err": {},
              "uuid": "e141b44c-a4f9-4dd4-86d0-9958f9461590",
              "parentUUID": "c001a5f2-cb2a-471a-9924-5a9200fe8048",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1144,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nlet waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n  // return a promise that resolves after 1 second\n  return new Cypress.Promise((resolve, reject) => {\n    setTimeout(() => {\n      // set waited to true\n      waited = true;\n      // resolve with 'foo' string\n      resolve('foo');\n    }, 1000);\n  });\n}\ncy.then(() => {\n  // return a promise to cy.then() that\n  // is awaited until it resolves\n  return waitOneSecond().then(str => {\n    expect(str).to.eq('foo');\n    expect(waited).to.be.true;\n  });\n});",
              "err": {},
              "uuid": "b9dd2ea0-d745-4586-a3ef-94bedd59f379",
              "parentUUID": "c001a5f2-cb2a-471a-9924-5a9200fe8048",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fca4c000-72fe-4eca-8e99-57121695a622",
            "df9e0b09-8879-4f16-94a0-1a8ba15eb1ac",
            "b4b643f3-f4b3-492e-961d-71a4175c94c6",
            "e141b44c-a4f9-4dd4-86d0-9958f9461590",
            "b9dd2ea0-d745-4586-a3ef-94bedd59f379"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2558,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "301cf8df-b8c0-4f68-a70e-5c310a45397e",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\viewport.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\viewport.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d15075fc-0d94-44af-9124-0f6bf6d8b903",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 3259,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncy.viewport(320, 480);\n// the navbar should have collapse since our screen is smaller\ncy.get('#navbar').should('not.be.visible');\ncy.get('.navbar-toggle').should('be.visible').click();\ncy.get('.nav').find('a').should('be.visible');\n// lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999);\n// cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport('macbook-15');\ncy.wait(200);\ncy.viewport('macbook-13');\ncy.wait(200);\ncy.viewport('macbook-11');\ncy.wait(200);\ncy.viewport('ipad-2');\ncy.wait(200);\ncy.viewport('ipad-mini');\ncy.wait(200);\ncy.viewport('iphone-6+');\ncy.wait(200);\ncy.viewport('iphone-6');\ncy.wait(200);\ncy.viewport('iphone-5');\ncy.wait(200);\ncy.viewport('iphone-4');\ncy.wait(200);\ncy.viewport('iphone-3');\ncy.wait(200);\n// cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport('ipad-2', 'portrait');\ncy.wait(200);\ncy.viewport('iphone-4', 'landscape');\ncy.wait(200);\n// The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.config.{js|ts})",
              "err": {},
              "uuid": "01e4346b-7a06-4f22-abf5-771a98ec9f89",
              "parentUUID": "d15075fc-0d94-44af-9124-0f6bf6d8b903",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "01e4346b-7a06-4f22-abf5-771a98ec9f89"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3259,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "91b83721-7c6d-4638-bb10-79de8d1cea38",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\waiting.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\waiting.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ece8922b-b8ce-49c5-a07f-8605687f819e",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 4698,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "d3458052-7d4d-40ce-842e-79d54e9e8986",
              "parentUUID": "ece8922b-b8ce-49c5-a07f-8605687f819e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 496,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// wait for GET comments/1\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);",
              "err": {},
              "uuid": "561ec7b9-1a33-4d2d-abea-5a3656e6d5a0",
              "parentUUID": "ece8922b-b8ce-49c5-a07f-8605687f819e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3458052-7d4d-40ce-842e-79d54e9e8986",
            "561ec7b9-1a33-4d2d-abea-5a3656e6d5a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5194,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e59933e1-0e70-452c-aecd-d990f18dcb88",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\window.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\window.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a8697cd6-6e97-4c9a-9265-107b78e47b1c",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 302,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "79a6951d-9f09-476a-80fa-24ce9ba9cdbf",
              "parentUUID": "a8697cd6-6e97-4c9a-9265-107b78e47b1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "3b0b7854-481b-427e-890d-6edc1fa00505",
              "parentUUID": "a8697cd6-6e97-4c9a-9265-107b78e47b1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "827e7c80-56d6-47d9-bad6-8964075bcc5e",
              "parentUUID": "a8697cd6-6e97-4c9a-9265-107b78e47b1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79a6951d-9f09-476a-80fa-24ce9ba9cdbf",
            "3b0b7854-481b-427e-890d-6edc1fa00505",
            "827e7c80-56d6-47d9-bad6-8964075bcc5e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 534,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "37ee97f8-94c0-4699-bb1e-5dce0dbb8de5",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\automation-test-store\\add-multiple-items-to-basket.js",
      "file": "cypress\\e2e\\integration\\automation-test-store\\add-multiple-items-to-basket.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e1f5e5e8-f777-4e87-8a5d-48f664d9fefd",
          "title": "Add multiple items to basket",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add specific items to basket",
              "fullTitle": "Add multiple items to basket Add specific items to basket",
              "timedOut": null,
              "duration": 4407,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "autoStore_HairCare_PO.addHairCareProductsToBasket();",
              "err": {},
              "uuid": "13411bd4-5778-49ec-921c-86417909e336",
              "parentUUID": "e1f5e5e8-f777-4e87-8a5d-48f664d9fefd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "13411bd4-5778-49ec-921c-86417909e336"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4407,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f379acde-bc5b-4fb9-b9bf-35bed802b6ea",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\automation-test-store\\alias-invoke.js",
      "file": "cypress\\e2e\\integration\\automation-test-store\\alias-invoke.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f3c955d-9b70-42b9-b3c2-fd0aadc5b0b8",
          "title": "Alias and invoke",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate product thumbnail",
              "fullTitle": "Alias and invoke Validate product thumbnail",
              "timedOut": null,
              "duration": 2105,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get('.thumbnail').as('productThumbnail');\ncy.get('@productThumbnail').should('have.length', 16);\ncy.get('@productThumbnail').find('.productcart').invoke('attr', 'title').should('include', 'Add to Cart');",
              "err": {},
              "uuid": "1024dd63-0847-48da-a4fc-ffb2a105d2fe",
              "parentUUID": "0f3c955d-9b70-42b9-b3c2-fd0aadc5b0b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1024dd63-0847-48da-a4fc-ffb2a105d2fe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2105,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "31ce69d4-900e-42bf-bcf2-0fb564c1e43b",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\automation-test-store\\contact-us.js",
      "file": "cypress\\e2e\\integration\\automation-test-store\\contact-us.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "14530b5d-e8c3-42d0-92db-95bf59cd2880",
          "title": "Test Contact Us form via Automation Test Store",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a successful submission via contact us form",
              "fullTitle": "Test Contact Us form via Automation Test Store Should be able to submit a successful submission via contact us form",
              "timedOut": null,
              "duration": 5619,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.automationteststore.com/\");\ncy.get(\"a[href$='contact']\").click().then(function (linkText) {\n  cy.log(\"Clicked on link using text: \" + linkText.text());\n});\n//cy.xpath(\"//a[contains(@href, 'contact')]\").click();\ncy.get(\"@user\").then(user => {\n  cy.get('#ContactUsFrm_first_name').type(user.first_name);\n  cy.get('#ContactUsFrm_email').type(user.email);\n});\ncy.get('#ContactUsFrm_email').should('have.attr', 'name', 'email');\ncy.get('#ContactUsFrm_enquiry').type(\"Do you provide additional discount on bulk orders?\");\ncy.get(\"button[title='Submit']\").click();\ncy.get('.mb40 > :nth-child(3)').should('have.text', 'Your enquiry has been successfully sent to the store owner!');\ncy.log(\"Test has completed!\");",
              "err": {},
              "uuid": "36e12b84-01a0-4cae-a04c-87de8c04b7e2",
              "parentUUID": "14530b5d-e8c3-42d0-92db-95bf59cd2880",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36e12b84-01a0-4cae-a04c-87de8c04b7e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5619,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a66b49f5-fe73-43fb-ad9f-96f8e2339007",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\automation-test-store\\inspect-item.js",
      "file": "cypress\\e2e\\integration\\automation-test-store\\inspect-item.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5be93bd4-4d9e-4332-b8c5-0d269945c834",
          "title": "Verifying variables, cypress commands and jquery commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Navigating to specific product pages",
              "fullTitle": "Verifying variables, cypress commands and jquery commands Navigating to specific product pages",
              "timedOut": null,
              "duration": 4184,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.automationteststore.com/\");\nconst makeupLink = cy.get(\".subnav > ul > li:nth-of-type(3) > a\").contains(\"Makeup\");\nconst skincareLink = cy.get(\".subnav > ul > li:nth-of-type(4) > a\").contains(\"Skincare\");\nmakeupLink.click();\nskincareLink.click();",
              "err": {},
              "uuid": "5ea63168-071f-49f8-aaa5-0c5d0e50204d",
              "parentUUID": "5be93bd4-4d9e-4332-b8c5-0d269945c834",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ea63168-071f-49f8-aaa5-0c5d0e50204d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4184,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "86e01f4e-6d8d-484a-bb84-35d87e7d135a",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\automation-test-store\\iterate-over-elements.js",
      "file": "cypress\\e2e\\integration\\automation-test-store\\iterate-over-elements.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bd54cc00-e574-46e1-a99d-a55f2d72843c",
          "title": "Iterate over elements",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log information of all hair care products",
              "fullTitle": "Iterate over elements Log information of all hair care products",
              "timedOut": null,
              "duration": 2494,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"a[href*='product/category&path=']\").contains(\"Hair Care\").click();\ncy.get(\".fixed_wrapper .prdocutname\").each(($el, index, $list) => {\n  cy.log(\"Index: \" + index + \" : \" + $el.text());\n});",
              "err": {},
              "uuid": "afd9fdd5-eea4-42bd-b92b-60da5e1749e3",
              "parentUUID": "bd54cc00-e574-46e1-a99d-a55f2d72843c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add specific product to basket",
              "fullTitle": "Iterate over elements Add specific product to basket",
              "timedOut": null,
              "duration": 1277,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"a[href*='product/category&path=']\").contains(\"Hair Care\").click();\ncy.get(\".fixed_wrapper .prdocutname\").each(($el, index, $list) => {\n  if ($el.text().includes('Curls to straight Shampoo')) {\n    cy.wrap($el).click();\n    //cy.get($el).click() no es lo mismo, wrapg envuelve el objeto jquery para convertirlo a tipo cypress.\n  }\n});",
              "err": {},
              "uuid": "db9212fb-ed6f-4d99-a23d-760126640e6a",
              "parentUUID": "bd54cc00-e574-46e1-a99d-a55f2d72843c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "afd9fdd5-eea4-42bd-b92b-60da5e1749e3",
            "db9212fb-ed6f-4d99-a23d-760126640e6a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3771,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ece96631-f3ca-471c-b2ff-9d3314fd9a51",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\automation-test-store\\iterate-over-elements_COMMANDS.js",
      "file": "cypress\\e2e\\integration\\automation-test-store\\iterate-over-elements_COMMANDS.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "edb605e5-77a2-4761-b972-72a71f9d0142",
          "title": "Iterate over elements",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log information of all hair care products",
              "fullTitle": "Iterate over elements Log information of all hair care products",
              "timedOut": null,
              "duration": 2224,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".fixed_wrapper .prdocutname\").each(($el, index, $list) => {\n  cy.log(\"Index: \" + index + \" : \" + $el.text());\n});",
              "err": {},
              "uuid": "0efb305d-0445-474b-aa3a-82fadd74d071",
              "parentUUID": "edb605e5-77a2-4761-b972-72a71f9d0142",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add specific product to basket",
              "fullTitle": "Iterate over elements Add specific product to basket",
              "timedOut": null,
              "duration": 1346,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct('Curls to straight Shampoo');",
              "err": {},
              "uuid": "67e5c853-7220-4328-80f4-fa3db3b5e260",
              "parentUUID": "edb605e5-77a2-4761-b972-72a71f9d0142",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add another specific product to basket",
              "fullTitle": "Iterate over elements Add another specific product to basket",
              "timedOut": null,
              "duration": 1608,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct('Seaweed Conditioner');",
              "err": {},
              "uuid": "aecd6bbd-ecff-4c66-b119-e1e3d3eac82f",
              "parentUUID": "edb605e5-77a2-4761-b972-72a71f9d0142",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add another specific product to basket 2",
              "fullTitle": "Iterate over elements Add another specific product to basket 2",
              "timedOut": null,
              "duration": 1979,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct('Eau Parfumee au The Vert Shampoo');",
              "err": {},
              "uuid": "b2a85a03-36b0-427f-8153-9e96e7e42e84",
              "parentUUID": "edb605e5-77a2-4761-b972-72a71f9d0142",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0efb305d-0445-474b-aa3a-82fadd74d071",
            "67e5c853-7220-4328-80f4-fa3db3b5e260",
            "aecd6bbd-ecff-4c66-b119-e1e3d3eac82f",
            "b2a85a03-36b0-427f-8153-9e96e7e42e84"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7157,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "30e9e703-6ad6-4bd8-a8d5-a142870eac91",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\automation-test-store\\variables-and-cy-commands.js",
      "file": "cypress\\e2e\\integration\\automation-test-store\\variables-and-cy-commands.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6400994e-2dd5-4ecc-ac3c-5d5fe52ab97e",
          "title": "Verifying variables, cypress commands and jquery commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Navigating to specific product pages",
              "fullTitle": "Verifying variables, cypress commands and jquery commands Navigating to specific product pages",
              "timedOut": null,
              "duration": 2302,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"a[href*='product/category&path=']\").contains(\"Makeup\").click();\n//Following code will fail\n// const header = cy.get(\"h1 .maintext\");\n// cy.log(header.text())\ncy.get(\"h1 .maintext\").then($headerText => {\n  const headerText = $headerText.text();\n  cy.log(\"Found header text: \" + headerText);\n});",
              "err": {},
              "uuid": "1ac85443-80c8-4ea2-b652-4ed471e518b5",
              "parentUUID": "6400994e-2dd5-4ecc-ac3c-5d5fe52ab97e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate properties of the Contact Us Page",
              "fullTitle": "Verifying variables, cypress commands and jquery commands Validate properties of the Contact Us Page",
              "timedOut": null,
              "duration": 484,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/index.php?rt=content/contact\");\n//Uses cypress commands and chaining\ncy.contains('#ContactUsFrm', 'Contact Us Form').find('#field_11').should('contain', 'First name');\n//JQuery Approach\ncy.contains('#ContactUsFrm', 'Contact Us Form').then(text => {\n  const firstNameText = text.find('#field_11').text();\n  expect(firstNameText).to.contain('First name');\n  //Embedded commands (Closure)\n  cy.get('#field_11').then(fnText => {\n    cy.log(fnText.text());\n    cy.log(fnText);\n  });\n});\ncy.contains('#ContactUsFrm', 'Contact Us Form').then(text => {\n  const EnquiryText = text.find('#field_13').text();\n  expect(EnquiryText).to.contain('Enquiry:');\n});",
              "err": {},
              "uuid": "20587c56-366b-45cf-a700-5e7ec04da536",
              "parentUUID": "6400994e-2dd5-4ecc-ac3c-5d5fe52ab97e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ac85443-80c8-4ea2-b652-4ed471e518b5",
            "20587c56-366b-45cf-a700-5e7ec04da536"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2786,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b2153021-b5a1-4bee-8f1d-47352a19c7fb",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\other\\hooks.js",
      "file": "cypress\\e2e\\integration\\other\\hooks.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c84a9a80-c1e5-483e-9d4e-e213574f4776",
          "title": "Hooks",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Example test1",
              "fullTitle": "Hooks Example test1",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log(\"Example test1!\");",
              "err": {},
              "uuid": "d73d3a57-ca54-4bf2-aac1-1ca3ab493843",
              "parentUUID": "c84a9a80-c1e5-483e-9d4e-e213574f4776",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Example test2",
              "fullTitle": "Hooks Example test2",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log(\"Example test2!\");",
              "err": {},
              "uuid": "a755dbe8-86b8-40bb-8497-bdeba920b367",
              "parentUUID": "c84a9a80-c1e5-483e-9d4e-e213574f4776",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d73d3a57-ca54-4bf2-aac1-1ca3ab493843",
            "a755dbe8-86b8-40bb-8497-bdeba920b367"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 103,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "68356c33-856f-43b9-be13-a4742baaa41c",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\other\\same-origin-policy.js",
      "file": "cypress\\e2e\\integration\\other\\same-origin-policy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "faf86575-2464-4414-9333-f5aa67181099",
          "title": "Cypress web security",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate visiting two different domains",
              "fullTitle": "Cypress web security Validate visiting two different domains",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.visit('http://www.webdriveruniversity.com/');\ncy.visit('https://www.google.com');",
              "err": {},
              "uuid": "dd772c28-091f-4be0-8a69-9ffcab97e8ef",
              "parentUUID": "faf86575-2464-4414-9333-f5aa67181099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate visiting two different domains via user actions",
              "fullTitle": "Cypress web security Validate visiting two different domains via user actions",
              "timedOut": null,
              "duration": 3607,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://www.webdriveruniversity.com/');\ncy.get('#automation-test-store').invoke('removeAttr', 'target').click();",
              "err": {},
              "uuid": "4cca9df6-9925-4466-8347-e741459bb8d4",
              "parentUUID": "faf86575-2464-4414-9333-f5aa67181099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Origin command",
              "fullTitle": "Cypress web security Origin command",
              "timedOut": null,
              "duration": 2600,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.origin('webdriveruniversity.com', () => {\n  cy.visit(\"/\");\n});\ncy.origin('automationteststore.com', () => {\n  cy.visit(\"/\");\n});\n//Same Origin Example:\n//cy.visit(\"https://www.webdriveruniversity.com\");\n//cy.visit(\"https://selectors.webdriveruniversity.com\");",
              "err": {},
              "uuid": "1bfcf733-cea2-4c12-8ee8-c15135343ee1",
              "parentUUID": "faf86575-2464-4414-9333-f5aa67181099",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4cca9df6-9925-4466-8347-e741459bb8d4",
            "1bfcf733-cea2-4c12-8ee8-c15135343ee1"
          ],
          "failures": [],
          "pending": [
            "dd772c28-091f-4be0-8a69-9ffcab97e8ef"
          ],
          "skipped": [],
          "duration": 6207,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "afe877f1-77e1-497a-bfc4-c05d20a0f525",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\autocomplete-dropdown-list.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\autocomplete-dropdown-list.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "007de1df-65e0-4f08-824d-a0689ac6000c",
          "title": "Verify Autocomplete dropwdown lists via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select specific product via autocomplete list",
              "fullTitle": "Verify Autocomplete dropwdown lists via webdriveruni Select specific product via autocomplete list",
              "timedOut": null,
              "duration": 1591,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"http://www.webdriveruniversity.com\");\ncy.get('#autocomplete-textfield').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#myInput').type('A');\ncy.get('#myInputautocomplete-list > *').each(($el, index, $list) => {\n  const prod = $el.text();\n  const productToSelect = 'Avacado';\n  if (prod === productToSelect) {\n    //$el.click();\n    $el.trigger(\"click\");\n    cy.get('#submit-button').click();\n    cy.url().should('include', productToSelect);\n  }\n}).then(() => {\n  cy.get('#myInput').type('g');\n  cy.get('#myInputautocomplete-list > *').each(($el, index, $list) => {\n    const prod = $el.text();\n    const productToSelect = 'Grapes';\n    if (prod === productToSelect) {\n      //$el.click();\n      $el.trigger(\"click\");\n      cy.get('#submit-button').click();\n      cy.url().should('include', productToSelect);\n    }\n  });\n});",
              "err": {},
              "uuid": "98932533-6098-4913-b9ac-95dab2a898e7",
              "parentUUID": "007de1df-65e0-4f08-824d-a0689ac6000c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "98932533-6098-4913-b9ac-95dab2a898e7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1591,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "11527cee-02da-4c9e-99af-7eb01a7ae9ab",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\browser-navigation.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\browser-navigation.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a268a679-540c-439a-90e1-f263fd7f05ef",
          "title": "Validate webdriveruni homepage links",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Confirm links redirect to the correct pages",
              "fullTitle": "Validate webdriveruni homepage links Confirm links redirect to the correct pages",
              "timedOut": null,
              "duration": 4555,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\");\ncy.visit(\"http://www.webdriveruniversity.com\");\ncy.get('#contact-us').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'contactus');\ncy.go('back');\ncy.reload();\ncy.url().should('include', 'http://www.webdriveruniversity.com/');\n//cy.reload(true) //reload without using cache\ncy.go('forward');\ncy.url().should('include', 'contactus');\ncy.go('back');\ncy.get('#login-portal').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'Login-Portal');\ncy.go('back');\ncy.get('#to-do-list').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'To-Do-List');\ncy.go('back');",
              "err": {},
              "uuid": "4fc18b21-5081-4d56-b258-37e1487ad732",
              "parentUUID": "a268a679-540c-439a-90e1-f263fd7f05ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4fc18b21-5081-4d56-b258-37e1487ad732"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4555,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "184d7817-720a-4165-a0c1-7c87d0c9f26d",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\checkboxes.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\checkboxes.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "133ea158-2c05-41cc-93db-39fdf308ffb4",
          "title": "Verify checkboxes via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check and validate checkbox",
              "fullTitle": "Verify checkboxes via webdriveruni Check and validate checkbox",
              "timedOut": null,
              "duration": 1077,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.get('#checkboxes > :nth-child(1) > input').check()\n//cy.get('#checkboxes > :nth-child(1) > input').check().should('be.checked')\ncy.get('#checkboxes > :nth-child(1) > input').as('option-1');\n//cy.get('@option-1').check();\ncy.get('@option-1').check().should('be.checked');",
              "err": {},
              "uuid": "9134115a-bb22-46b9-b87f-d666948bb526",
              "parentUUID": "133ea158-2c05-41cc-93db-39fdf308ffb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Uncheck and validate checkbox",
              "fullTitle": "Verify checkboxes via webdriveruni Uncheck and validate checkbox",
              "timedOut": null,
              "duration": 375,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(':nth-child(5) > input').as('option-3');\ncy.get('@option-3').uncheck().should('not.be.checked');",
              "err": {},
              "uuid": "82207b6e-851e-4a19-a7b0-7f91b4cbf37a",
              "parentUUID": "133ea158-2c05-41cc-93db-39fdf308ffb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check multiple checkboxes",
              "fullTitle": "Verify checkboxes via webdriveruni Check multiple checkboxes",
              "timedOut": null,
              "duration": 532,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"input[type='checkbox']\").check([\"option-1\", \"option-2\", \"option-3\", \"option-4\"]).should('be.checked');",
              "err": {},
              "uuid": "0b258830-8810-47d2-9508-d8e9afed2e78",
              "parentUUID": "133ea158-2c05-41cc-93db-39fdf308ffb4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9134115a-bb22-46b9-b87f-d666948bb526",
            "82207b6e-851e-4a19-a7b0-7f91b4cbf37a",
            "0b258830-8810-47d2-9508-d8e9afed2e78"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1984,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "68c4d43a-1d41-41a1-8207-082d0468442d",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\checkboxes_ALIAS.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\checkboxes_ALIAS.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "96454a96-661d-43e2-b2b9-2372ea18413f",
          "title": "Verify checkboxes via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check and validate checkbox",
              "fullTitle": "Verify checkboxes via webdriveruni Check and validate checkbox",
              "timedOut": null,
              "duration": 174,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//cy.get('#checkboxes > :nth-child(1) > input').check()\n//cy.get('#checkboxes > :nth-child(1) > input').check().should('be.checked')\ncy.get('#checkboxes > :nth-child(1) > input').as('option-1');\n//cy.get('@option-1').check();\ncy.get('@option-1').check().should('be.checked');",
              "err": {
                "message": "TypeError: cy.navigateTo_WebdriverUni_Checkbox_Page is not a function\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Verify checkboxes via webdr...`",
                "estack": "TypeError: cy.navigateTo_WebdriverUni_Checkbox_Page is not a function\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Verify checkboxes via webdr...`\n    at Context.eval (webpack:///./cypress/e2e/integration/webdriver-uni/checkboxes_ALIAS.js:5:11)",
                "diff": null
              },
              "uuid": "87f4a565-68b1-43be-a43d-2afac06d63de",
              "parentUUID": "96454a96-661d-43e2-b2b9-2372ea18413f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Uncheck and validate checkbox",
              "fullTitle": "Verify checkboxes via webdriveruni Uncheck and validate checkbox",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(':nth-child(5) > input').as('option-3');\ncy.get('@option-3').uncheck().should('not.be.checked');",
              "err": {},
              "uuid": "44954b33-6d9c-4882-b514-ddaa166fead7",
              "parentUUID": "96454a96-661d-43e2-b2b9-2372ea18413f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Check mutiple checkboxes",
              "fullTitle": "Verify checkboxes via webdriveruni Check mutiple checkboxes",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"input[type='checkbox']\").check([\"option-1\", \"option-2\", \"option-3\", \"option-4\"]).should('be.checked');",
              "err": {},
              "uuid": "c4e71186-e9bd-484b-9e2e-e8f010789630",
              "parentUUID": "96454a96-661d-43e2-b2b9-2372ea18413f",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "87f4a565-68b1-43be-a43d-2afac06d63de"
          ],
          "pending": [],
          "skipped": [
            "44954b33-6d9c-4882-b514-ddaa166fead7",
            "c4e71186-e9bd-484b-9e2e-e8f010789630"
          ],
          "duration": 174,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "db125f78-443c-4f77-8f43-6334ae1ee874",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\contact-us.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\contact-us.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7ffd7a82-2850-4469-8f3e-967682c1b580",
          "title": "Test Contact Us form via WebdriverUni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a successful submission via contact us form",
              "fullTitle": "Test Contact Us form via WebdriverUni Should be able to submit a successful submission via contact us form",
              "timedOut": null,
              "duration": 6044,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.document().should(\"have.property\", \"charset\").and(\"eq\", \"UTF-8\");\ncy.title().should(\"include\", \"WebDriver | Contact Us\");\ncy.url().should(\"include\", \"contactus\");\ncontact_Us_PO.contactForm_Submission(Cypress.env(\"first_name\"), data.last_name, data.email, \"How can I learn Cypress?\", \"h1\", \"Thank You for your Message!\");",
              "err": {},
              "uuid": "e1517e6f-320a-44b3-ad90-f5d979e97b81",
              "parentUUID": "7ffd7a82-2850-4469-8f3e-967682c1b580",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to submit a successful submission via contact us form as all fields are required",
              "fullTitle": "Test Contact Us form via WebdriverUni Should not be able to submit a successful submission via contact us form as all fields are required",
              "timedOut": null,
              "duration": 4920,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contact_Us_PO.contactForm_Submission(data.first_name, data.last_name, \" \", \"How can I learn Cypress?\", \"body\", \"Error: Invalid email address\");",
              "err": {},
              "uuid": "61bc3fdd-a34b-4867-8678-044af17a79a3",
              "parentUUID": "7ffd7a82-2850-4469-8f3e-967682c1b580",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1517e6f-320a-44b3-ad90-f5d979e97b81",
            "61bc3fdd-a34b-4867-8678-044af17a79a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10964,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5ed6c8f9-8c6f-4e10-bc86-4b260d6df4fd",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\contact-us_ALIAS.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\contact-us_ALIAS.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "802ed3df-c689-4b8e-a4c1-af783d7da8cd",
          "title": "Test Contact Us form via Automation Test Store",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a successful submission via contact us form",
              "fullTitle": "Test Contact Us form via Automation Test Store Should be able to submit a successful submission via contact us form",
              "timedOut": null,
              "duration": 5446,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.automationteststore.com/\");\ncy.get(\"a[href$='contact']\").click().then(function (linkText) {\n  cy.log(\"Clicked on link using text: \" + linkText.text());\n});\n//cy.xpath(\"//a[contains(@href, 'contact')]\").click();\ncy.get(\"@user\").then(user => {\n  cy.get('#ContactUsFrm_first_name').type(user.first_name);\n  cy.get('#ContactUsFrm_email').type(user.email);\n});\ncy.get('#ContactUsFrm_email').should('have.attr', 'name', 'email');\ncy.get('#ContactUsFrm_enquiry').type(\"Do you provide additional discount on bulk orders?\");\ncy.get(\"button[title='Submit']\").click();\ncy.get('.mb40 > :nth-child(3)').should('have.text', 'Your enquiry has been successfully sent to the store owner!');\ncy.log(\"Test has completed!\");",
              "err": {},
              "uuid": "a9162736-95a3-4faf-b28a-d9f04c8c5cb4",
              "parentUUID": "802ed3df-c689-4b8e-a4c1-af783d7da8cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9162736-95a3-4faf-b28a-d9f04c8c5cb4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5446,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e90a33d9-8f60-499b-8e1b-67865de47ceb",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\contact-us_FIXTURES.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\contact-us_FIXTURES.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a6c174d5-ea46-4c09-b99b-035deb829b03",
          "title": "Test Contact Us form via WebdriverUni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a successful submission via contact us form",
              "fullTitle": "Test Contact Us form via WebdriverUni Should be able to submit a successful submission via contact us form",
              "timedOut": null,
              "duration": 2805,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\");\ncy.get('[name=\"first_name\"]').type(data.first_name);\ncy.get('[name=\"last_name\"]').type(data.last_name);\ncy.get('[name=\"email\"]').type(data.email);\ncy.get('[name=\"message\"]').type(\"Me encanta vuestra app.\");\ncy.get('[type=\"submit\"]').click();",
              "err": {},
              "uuid": "0c7125ae-4296-4dd7-95f1-8522ea7e4b7c",
              "parentUUID": "a6c174d5-ea46-4c09-b99b-035deb829b03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to submit a successful submission via contact us form",
              "fullTitle": "Test Contact Us form via WebdriverUni Should be able to submit a successful submission via contact us form",
              "timedOut": null,
              "duration": 2229,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\");\n//Invoke\n//cy.get('#contact-us').invoke('removeAttr', 'target').click({force:true})\n//Validate\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');\n//Title\ncy.title().should('include', 'WebDriver | Contact Us');\ncy.url().should('include', 'contactus');\n//cy.get('#contact-us').click({force: true})\ncy.get('[name=\"first_name\"]').type(data.first_name);\ncy.get('[name=\"last_name\"]').type(data.last_name);\ncy.get('[name=\"email\"]').type(data.email);\ncy.get('textarea.feedback-input').type(\"How can I learn Cypress?\");\ncy.get('[type=\"submit\"]').click();\n//Assertions\ncy.get('h1').should('have.text', 'Thank You for your Message!');",
              "err": {},
              "uuid": "b40d54c5-a952-4f99-9cf8-7a959fb25acb",
              "parentUUID": "a6c174d5-ea46-4c09-b99b-035deb829b03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to submit a successful submission via contact us form as all fields are required",
              "fullTitle": "Test Contact Us form via WebdriverUni Should not be able to submit a successful submission via contact us form as all fields are required",
              "timedOut": null,
              "duration": 1486,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\");\ncy.get('[name=\"first_name\"]').type(data.first_name);\ncy.get('[name=\"last_name\"]').type(data.last_name);\ncy.get('[name=\"message\"]').type(\"Me encanta vuestra app.\");\ncy.get('[type=\"submit\"]').click();",
              "err": {},
              "uuid": "2409278e-572b-419c-a0c4-396d62a47691",
              "parentUUID": "a6c174d5-ea46-4c09-b99b-035deb829b03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to submit a successful submission via contact us form as all fields are required",
              "fullTitle": "Test Contact Us form via WebdriverUni Should not be able to submit a successful submission via contact us form as all fields are required",
              "timedOut": null,
              "duration": 1127,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\");\ncy.get('[name=\"first_name\"]').type(data.first_name);\ncy.get('[name=\"last_name\"]').type(data.last_name);\ncy.get('textarea.feedback-input').type(\"How can I learn Cypress?\");\ncy.get('[type=\"submit\"]').click();\ncy.get('body').contains('Error: all fields are required');\ncy.get('body').contains('Error: Invalid email address');",
              "err": {},
              "uuid": "7ebcca1d-f54a-40b5-9bf4-e3252c4a2be5",
              "parentUUID": "a6c174d5-ea46-4c09-b99b-035deb829b03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c7125ae-4296-4dd7-95f1-8522ea7e4b7c",
            "b40d54c5-a952-4f99-9cf8-7a959fb25acb",
            "2409278e-572b-419c-a0c4-396d62a47691",
            "7ebcca1d-f54a-40b5-9bf4-e3252c4a2be5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7647,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7b758085-1c6a-4221-8e7e-aaa622723c15",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\contact-us_REDUCIDO.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\contact-us_REDUCIDO.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "76d2c6ce-9c55-43ff-8710-02666d2c9c3b",
          "title": "Test Contact Us form via WebdriverUni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a successful submission via contact us form",
              "fullTitle": "Test Contact Us form via WebdriverUni Should be able to submit a successful submission via contact us form",
              "timedOut": null,
              "duration": 2690,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.document().should(\"have.property\", \"charset\").and(\"eq\", \"UTF-8\");\ncy.title().should(\"include\", \"WebDriver | Contact Us\");\ncy.url().should(\"include\", \"contactus\");\n//cy.get('#contact-us').click({force: true})\n// cy.get('[name=\"first_name\"]').type(data.first_name);\n// cy.get('[name=\"last_name\"]').type(data.last_name);\n// cy.get('[name=\"email\"]').type(data.email)\n// cy.get('textarea.feedback-input').type(\"How can I learn Cypress?\")\n// cy.get('[type=\"submit\"]').click();\n// cy.get('h1').should('have.text', 'Thank You for your Message!')\ncy.webdriverUni_ContactForm_Submission(Cypress.env(\"first_name\"), data.last_name, data.email, \"How can I learn Cypress?\", \"h1\", \"Thank You for your Message!\");",
              "err": {},
              "uuid": "d740f3ec-1e5e-4178-9a0c-a114d528e779",
              "parentUUID": "76d2c6ce-9c55-43ff-8710-02666d2c9c3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to submit a successful submission via contact us form as all fields are required",
              "fullTitle": "Test Contact Us form via WebdriverUni Should not be able to submit a successful submission via contact us form as all fields are required",
              "timedOut": null,
              "duration": 1723,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cy.get('[name=\"first_name\"]').type(data.first_name);\n// cy.get('[name=\"last_name\"]').type(data.last_name);\n// cy.get('textarea.feedback-input').type(\"How can I learn Cypress?\")\n// cy.get('[type=\"submit\"]').click();\n// cy.get('body').contains('Error: all fields are required');\ncy.webdriverUni_ContactForm_Submission(data.first_name, data.last_name, \" \", \"How can I learn Cypress?\", \"body\", \"Error: Invalid email address\");",
              "err": {},
              "uuid": "a7eaca45-c848-4617-8d6a-5f6cf6bce5d9",
              "parentUUID": "76d2c6ce-9c55-43ff-8710-02666d2c9c3b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d740f3ec-1e5e-4178-9a0c-a114d528e779",
            "a7eaca45-c848-4617-8d6a-5f6cf6bce5d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4413,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "51413d62-6337-4e66-b724-24472036a634",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\data-tables.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\data-tables.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "65fbe046-475b-44bb-85d2-0c9f950039d4",
          "title": "Handling data via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate and assert the total age of all users",
              "fullTitle": "Handling data via webdriveruni Calculate and assert the total age of all users",
              "timedOut": null,
              "duration": 1744,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var userDetails = [];\nlet numb = 0;\ncy.get('#thumbnail-1 td').each(($el, index, $list) => {\n  userDetails[index] = $el.text();\n}).then(() => {\n  var i;\n  for (i = 0; i < userDetails.length; i++) {\n    if (Number(userDetails[i])) {\n      numb += Number(userDetails[i]);\n    }\n    //cy.log(userDetails[i])\n  }\n  cy.log(\"Found total age: \" + numb);\n  expect(numb).to.eq(322);\n});",
              "err": {},
              "uuid": "364db6df-daf4-4f5c-a5ed-3d8b3f0d4f2b",
              "parentUUID": "65fbe046-475b-44bb-85d2-0c9f950039d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Calculate and assert the age of a given user based on last name",
              "fullTitle": "Handling data via webdriveruni Calculate and assert the age of a given user based on last name",
              "timedOut": null,
              "duration": 370,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#thumbnail-1 tr td:nth-child(2)').each(($el, index, $list) => {\n  const text = $el.text();\n  if (text.includes(\"Woods\")) {\n    cy.get('#thumbnail-1 tr td:nth-child(2)').eq(index).next().then(function (age) {\n      const userAge = age.text();\n      expect(userAge).to.equal(\"80\");\n    });\n  }\n});",
              "err": {},
              "uuid": "32a8ab90-a55d-4007-9557-f02184722473",
              "parentUUID": "65fbe046-475b-44bb-85d2-0c9f950039d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "364db6df-daf4-4f5c-a5ed-3d8b3f0d4f2b",
            "32a8ab90-a55d-4007-9557-f02184722473"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2114,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}